buildscript {
  ext {
    kotlinVersion = '1.2.61'
    selenideVersion = '4.14.0'

    javaVersion = '1.8'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    junitJupiterVersion = '5.2.0'
    junitPlatformVersion = '1.2.0'
    asciidoctorjPdfVersion = '1.5.0-alpha.15'
    assertjVersion = '3.11.0'
    assertkVersion = '0.12'
    hamcrestVersion = '1.3'
    junit4Version = '4.12'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
  }
}

plugins {
  id 'idea'
  id 'eclipse'
  id 'com.avast.gradle.docker-compose' version '0.6.18'
  id 'org.asciidoctor.convert' version '1.5.8.1' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false

  id 'org.jetbrains.kotlin.jvm' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.plugin.noarg' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.plugin.allopen' version '1.2.61' apply false

  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
}

wrapper {
  gradleVersion = '4.10'
  distributionType = 'BIN'
}

apply from: "$project.rootDir/gradle/ide.gradle"
apply from: "$project.rootDir/gradle/clean.gradle"
apply from: "$project.rootDir/gradle/repositories.gradle"
apply from: "$project.rootDir/gradle/java.gradle"
apply from: "$project.rootDir/gradle/kotlin.gradle"
apply from: "$project.rootDir/gradle/junit.gradle"
apply from: "$project.rootDir/gradle/jacoco.gradle"
apply from: "$project.rootDir/gradle/findbugs.gradle"
apply from: "$project.rootDir/gradle/docs.gradle"
