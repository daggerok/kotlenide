package com.github.daggerok.examples.kotlenide

import com.codeborne.selenide.Selenide.close
import com.codeborne.selenide.Selenide.sleep
import com.github.daggerok.kotlenide.open
import org.junit.jupiter.api.Test
import org.junit.platform.commons.logging.LoggerFactory
import java.net.URL

val log = LoggerFactory.getLogger(OpenTest::class.java)!!

class OpenTest {

  @Test fun `should open using by String extension function`() {
    "https://google.com".open {
      sleep(1000)
      log.info { "awesome!" }
      close()
    }
  }

  @Test fun `should open using by URL extension function`() {
    URL("https://google.com").open {
      sleep(1000)
      close()
    }
  }

  @Test fun `should open using by Pair extension function with free first key contract`() {
    ("url" to "https://google.com").open {
      sleep(1000)
      close()
    }
  }

  @Test fun `should open using by Map extension function`() {
    mapOf("relativeOrAbsoluteUrl" to "https://google.com").open {
      sleep(1000)
      close()
    }
  }
}
